{"version":3,"sources":["components/Icons.jsx","components/Navigation.jsx","components/Hero.jsx","components/WishListItem.jsx","components/WishList.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["style","fontSize","brandStyle","Icons","type","icon","faBook","faGift","faTabletAlt","marginLeft","faMicrochip","faMicrophoneAlt","faCalendarAlt","faCheckCircle","color","faPaypal","faGamepad","faTwitter","Navigation","content","className","href","home_link","src","home_image","alt","title","paypal_link","twitter_link","Hero","text","WishListItem","subtitle","fulfilled","description","WishList","map","item","index","key","Footer","marginRight","marginTop","role","aria-label","App","window","websiteContent","navigation","hero","wishlist","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iPAkBMA,EAAQ,CACZC,SAAU,QAGNC,EAAa,CACjBD,SAAU,QA8BGE,EA3BD,SAAC,GACb,OADwB,EAAVC,MAEZ,IAAK,OACH,OAAO,0BAAMJ,MAAOA,GAAQ,kBAAC,IAAD,CAAiBK,KAAMC,OACrD,IAAK,OACH,OAAO,0BAAMN,MAAOA,GAAQ,kBAAC,IAAD,CAAiBK,KAAME,OACrD,IAAK,SACH,OAAO,0BAAMP,MAAOA,GAAQ,kBAAC,IAAD,CAAiBK,KAAMG,OACrD,IAAK,OACH,OAAO,0BAAMR,MAAK,eAAOA,EAAP,CAAcS,YAAa,KAAM,kBAAC,IAAD,CAAiBJ,KAAMK,OAC5E,IAAK,aACH,OAAO,0BAAMV,MAAK,eAAOA,EAAP,CAAcS,WAAY,KAAM,kBAAC,IAAD,CAAiBJ,KAAMM,OAC3E,IAAK,QACH,OAAO,0BAAMX,MAAOA,GAAQ,kBAAC,IAAD,CAAiBK,KAAMO,OACrD,IAAK,QACH,OAAO,kBAAC,IAAD,CAAiBP,KAAMQ,IAAeb,MAAO,CAACc,MAAO,gBAC9D,IAAK,SACH,OAAO,0BAAMd,MAAOE,GAAa,kBAAC,IAAD,CAAiBG,KAAMU,OAC1D,IAAK,MACH,OAAO,0BAAMf,MAAOA,GAAQ,kBAAC,IAAD,CAAiBK,KAAMW,OACrD,IAAK,UACH,OAAO,0BAAMhB,MAAOE,GAAa,kBAAC,IAAD,CAAiBG,KAAMY,OAC1D,QACE,OAAO,0BAAMjB,MAAOA,GAAO,kBAAC,IAAD,CAAiBK,KAAME,SC1BzCW,EAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,yBAAKC,UAAU,UACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,cAAcC,KAAMF,EAAQG,WACvC,yBAAKC,IAAKJ,EAAQK,WAAYC,IAAI,kBAEpC,yBAAKL,UAAU,0BAA0BD,EAAQO,QAEnD,yBAAKN,UAAU,8BACb,uBAAGA,UAAU,cAAcC,KAAMF,EAAQQ,aACvC,kBAAC,EAAD,CAAMvB,KAAK,YAEb,uBAAGgB,UAAU,cAAcC,KAAMF,EAAQS,cACvC,kBAAC,EAAD,CAAMxB,KAAK,gBCJJyB,EAVF,SAAC,GAAD,IAAGV,EAAH,EAAGA,QAAH,OACX,6BAASC,UAAU,mBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,YAAYD,EAAQW,UCqB3BC,EAxBM,SAAC,GAAgB,IAAdZ,EAAa,EAAbA,QAEtB,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,SACb,4BAAQA,UAAU,cACd,kBAAC,EAAD,CAAOhB,KAAMe,EAAQd,QAEzB,yBAAKe,UAAU,iBACb,yBAAKA,UAAU,WACb,2BACGD,EAAQO,OAAS,0CAAYP,EAAQO,MAApB,MACjBP,EAAQa,UAAY,yCAAWb,EAAQa,SAAnB,MACpBb,EAAQc,WAAa,kBAAC,EAAD,CAAO7B,KAAK,UAClC,6BACCe,EAAQe,aAAe,8BAAOf,EAAQe,mBCPtCC,EARE,SAAC,GAKd,OAL8B,EAAdhB,QACKiB,KAAI,SAAEC,EAAMC,GAC7B,OAAO,kBAAC,EAAD,CAAcnB,QAASkB,EAAME,IAAG,eAAUD,SCc1CE,EAhBA,SAAC,GAAD,IAAGrB,EAAH,EAAGA,QAAH,OACb,4BAAQC,UAAU,YAChB,yBAAKA,UAAU,qBACb,0BAAMpB,MAAO,CAACyC,YAAY,KACxB,uBAAGrB,UAAU,oBAAoBC,KAAMF,EAAQQ,aAC7C,kBAAC,EAAD,CAAMvB,KAAK,aAGf,uBAAGgB,UAAU,oBAAoBC,KAAMF,EAAQS,cAC7C,kBAAC,EAAD,CAAMxB,KAAK,aAEb,yBAAKJ,MAAO,CAAC0C,UAAW,KAAxB,aAAuC,0BAAMC,KAAK,MAAMC,aAAW,SAA5B,oBCI9BC,EAZH,WACV,IAAM1B,EAAU2B,OAAOC,eACvB,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAY5B,QAASA,EAAQ6B,aAC7B,kBAAC,EAAD,CAAM7B,QAASA,EAAQ8B,OACvB,kBAAC,EAAD,CAAU9B,QAASA,EAAQ+B,WAC3B,kBAAC,EAAD,CAAQ/B,QAASA,EAAQ6B,eCFXG,QACW,cAA7BL,OAAOM,SAASC,UAEe,UAA7BP,OAAOM,SAASC,UAEhBP,OAAOM,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a1e04969.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { \n  faBook, \n  faGift, \n  faMicrochip, \n  faTabletAlt, \n  faMicrophoneAlt, \n  faCalendarAlt,\n  faCheckCircle,\n  faGamepad\n} from '@fortawesome/free-solid-svg-icons'\nimport {\n  faPaypal,\n  faTwitter\n} from '@fortawesome/free-brands-svg-icons'\nimport \"bulma/css/bulma.css\";\n\nconst style = {\n  fontSize: \"30px\"\n}\n\nconst brandStyle = {\n  fontSize: \"20px\"\n}\n\nconst Icons = ({type}) => {\n  switch(type) {\n    case \"book\":\n      return <span style={style} ><FontAwesomeIcon icon={faBook} /></span>\n    case \"gift\":\n      return <span style={style} ><FontAwesomeIcon icon={faGift} /></span>\n    case \"tablet\":\n      return <span style={style} ><FontAwesomeIcon icon={faTabletAlt} /></span>\n    case \"tech\":\n      return <span style={{ ...style, marginLeft: -2 }} ><FontAwesomeIcon icon={faMicrochip} /></span>\n    case \"microphone\":\n      return <span style={{ ...style, marginLeft: 3 }} ><FontAwesomeIcon icon={faMicrophoneAlt} /></span>\n    case \"event\":\n      return <span style={style} ><FontAwesomeIcon icon={faCalendarAlt} /></span>\n    case \"check\":\n      return <FontAwesomeIcon icon={faCheckCircle} style={{color: \"lightGreen\"}} />\n    case \"paypal\":\n      return <span style={brandStyle} ><FontAwesomeIcon icon={faPaypal} /></span>\n    case \"toy\":\n      return <span style={style} ><FontAwesomeIcon icon={faGamepad} /></span>\n    case \"twitter\":\n      return <span style={brandStyle} ><FontAwesomeIcon icon={faTwitter} /></span>\n    default: \n      return <span style={style}><FontAwesomeIcon icon={faGift} /></span>\n  }\n}\n\nexport default Icons\n","import React from \"react\";\nimport \"bulma/css/bulma.css\";\nimport Icon from './Icons'\n\nconst Navigation = ({ content }) => (\n  <nav className=\"navbar\">\n    <div className=\"navbar-brand\">\n      <a className=\"navbar-item\" href={content.home_link}>\n        <img src={content.home_image} alt=\"podcast-logo\" />\n      </a>\n      <div className=\"navbar-item title is-4\">{content.title}</div>\n    </div>\n    <div className=\"navbar-end is-hidden-touch\">\n      <a className=\"navbar-item\" href={content.paypal_link}>\n        <Icon type=\"paypal\" />\n      </a>\n      <a className=\"navbar-item\" href={content.twitter_link}>\n        <Icon type=\"twitter\" />\n      </a>\n    </div>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport \"bulma/css/bulma.css\";\n\nconst Hero = ({ content }) => (\n  <section className=\"hero is-primary\">\n    <div className=\"hero-body\">\n      <div className=\"container\">\n        <h2 className=\"subtitle\">{content.text}</h2>\n      </div>\n    </div>\n  </section>\n);\n\nexport default Hero;\n","import React from \"react\";\nimport \"bulma/css/bulma.css\";\nimport Icons from './Icons'\n\nconst WishListItem = ({ content })=> { \n\n  return (\n    <div className=\"box\">\n      <div className=\"media\">\n        <figure className=\"media-left\">\n            <Icons type={content.icon} /> \n        </figure>\n        <div className=\"media-content\">\n          <div className=\"content\">\n            <p>\n              {content.title && <strong>{`${content.title} `}</strong>}\n              {content.subtitle && <small>{`${content.subtitle} `}</small>}\n              {content.fulfilled && <Icons type=\"check\" /> }\n              <br />\n              {content.description && <span>{content.description}</span>}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default WishListItem\n","import React from \"react\";\nimport \"bulma/css/bulma.css\";\nimport WishListItem from \"./WishListItem\"\n\nconst WishList = ({ content }) => {\n    const list = content.map(( item, index ) => {\n        return <WishListItem content={item} key={`wish-${index}`} />\n    })\n\n    return list\n}\n  \nexport default WishList\n","import React from \"react\";\nimport \"bulma/css/bulma.css\";\nimport Icon from './Icons'\n\nconst Footer = ({ content }) => (\n  <footer className=\"footer  \">\n    <div className=\"has-text-centered\">\n      <span style={{marginRight:10}}>\n        <a className=\"is-hidden-desktop\" href={content.paypal_link}>\n          <Icon type=\"paypal\" />\n        </a>\n      </span>\n      <a className=\"is-hidden-desktop\" href={content.twitter_link}>\n        <Icon type=\"twitter\" />\n      </a>\n      <div style={{marginTop: 10}}>Made with <span role='img' aria-label='heart'>ðŸ’š</span></div>\n    </div>\n  </footer>\n)\n\nexport default Footer\n","import React, { Fragment } from \"react\";\nimport \"bulma/css/bulma.css\";\nimport Navigation from \"./components/Navigation\";\nimport Hero from \"./components/Hero\";\nimport WishList from \"./components/WishList\"\nimport Footer from \"./components/Footer\"\n\nconst App = () => {\n  const content = window.websiteContent;\n  return (\n    <Fragment>\n      <Navigation content={content.navigation} />\n      <Hero content={content.hero} />\n      <WishList content={content.wishlist} />\n      <Footer content={content.navigation} />\n    </Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}